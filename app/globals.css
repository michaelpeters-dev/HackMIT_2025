@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --font-sans: var(--font-inter);
    --font-mono: var(--font-jetbrains-mono);

    /* Updated to remove dark green colors and use lighter green accents */
    --background: 0 0% 100%; /* #ffffff - clean white background */
    --foreground: 220 13% 22%; /* #374151 - dark gray text */
    --card: 0 0% 100%; /* #ffffff - white card background */
    --card-foreground: 220 13% 22%; /* #374151 - dark gray text on cards */
    --popover: 0 0% 100%; /* #ffffff - white popover background */
    --popover-foreground: 220 13% 22%; /* #374151 - dark gray popover text */
    --primary: 122 39% 60%; /* #66bb6a - lighter green primary */
    --primary-foreground: 0 0% 100%; /* #ffffff - white text on primary */
    --secondary: 0 0% 96%; /* #f5f5f5 - light gray secondary */
    --secondary-foreground: 220 13% 22%; /* #374151 - dark gray text on secondary */
    --muted: 0 0% 96%; /* #f5f5f5 - light gray muted */
    --muted-foreground: 220 13% 45%; /* #6b7280 - medium gray muted text */
    --accent: 122 39% 60%; /* #66bb6a - lighter green accent */
    --accent-foreground: 0 0% 100%; /* #ffffff - white text on accent */
    --destructive: 0 74% 42%; /* #dc2626 - red for errors */
    --destructive-foreground: 0 0% 100%; /* #ffffff - white text on destructive */
    --border: 0 0% 90%; /* #e5e5e5 - light gray borders */
    --input: 0 0% 100%; /* #ffffff - white input background */
    --ring: 122 39% 60% / 0.3; /* rgba(102, 187, 106, 0.3) - lighter green focus ring */
    --radius: 0.25rem;

    /* Fixed sidebar variable names to match tailwind config */
    --sidebar-background: 0 0% 100%; /* #ffffff - white sidebar */
    --sidebar-foreground: 220 13% 22%; /* #374151 - dark gray sidebar text */
    --sidebar-primary: 122 39% 60%; /* #66bb6a - lighter green sidebar primary */
    --sidebar-primary-foreground: 0 0% 100%; /* white text */
    --sidebar-accent: 122 39% 60%; /* #66bb6a - lighter green sidebar accent */
    --sidebar-accent-foreground: 0 0% 100%; /* white text */
    --sidebar-border: 0 0% 90%; /* #e5e5e5 - light gray sidebar border */
    --sidebar-ring: 122 39% 60% / 0.3; /* lighter green sidebar focus ring */
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: var(--font-sans);
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    line-height: 1.6;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  /* Enhanced scrollbar styling with smooth animations */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: hsl(var(--muted));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: hsl(var(--primary));
    border-radius: 4px;
    transition: background-color 0.2s ease;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--accent));
  }

  /* Enhanced global transitions with better performance */
  * {
    transition: color 0.2s ease, background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease, transform
      0.2s ease, opacity 0.2s ease;
  }

  /* Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }
}

@layer utilities {
  /* Enhanced shadow utilities with depth */
  .shadow-simple {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.2s ease;
  }

  .shadow-simple:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
  }

  .shadow-card {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.2s ease;
  }

  .shadow-card:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  /* Adding artwork-level animation utilities */
  .animate-fade-in {
    animation: fadeIn 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-slide-up {
    animation: slideUp 0.8s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .animate-scale-in {
    animation: scaleIn 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .animate-shimmer {
    animation: shimmer 3s infinite ease-in-out;
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }

  .animate-morphing-bg {
    animation: morphingBackground 8s ease-in-out infinite;
  }

  .animate-particle-float {
    animation: particleFloat 4s ease-in-out infinite;
  }

  .animate-code-typing {
    animation: codeTyping 3s steps(40, end) infinite;
  }

  .animate-neural-pulse {
    animation: neuralPulse 3s ease-in-out infinite;
  }

  .animate-holographic {
    animation: holographic 4s linear infinite;
  }

  /* Interactive button effects with advanced transforms */
  .btn-press {
    transform: scale(1) rotateZ(0deg);
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .btn-press:active {
    transform: scale(0.96) rotateZ(-1deg);
  }

  .btn-press:hover {
    transform: scale(1.02) rotateZ(0.5deg);
    filter: brightness(1.1);
  }

  /* Advanced hover lift effect with rotation */
  .hover-lift {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .hover-lift:hover {
    transform: translateY(-4px) rotateX(5deg) rotateY(2deg);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
  }

  /* Advanced gradient text with animation */
  .gradient-text {
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent)), #00d4ff, hsl(var(--primary)));
    background-size: 300% 300%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 4s ease-in-out infinite;
  }

  /* Glitch effect for futuristic feel */
  .glitch-effect {
    position: relative;
    animation: glitch 2s infinite;
  }

  .glitch-effect::before,
  .glitch-effect::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch-effect::before {
    animation: glitch-1 0.5s infinite;
    color: #ff0040;
    z-index: -1;
  }

  .glitch-effect::after {
    animation: glitch-2 0.5s infinite;
    color: #00ffff;
    z-index: -2;
  }

  /* Particle system background */
  .particle-bg {
    position: relative;
    overflow: hidden;
  }

  .particle-bg::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(2px 2px at 20px 30px, rgba(102, 187, 106, 0.3), transparent),
      radial-gradient(2px 2px at 40px 70px, rgba(0, 212, 255, 0.3), transparent),
      radial-gradient(1px 1px at 90px 40px, rgba(102, 187, 106, 0.4), transparent),
      radial-gradient(1px 1px at 130px 80px, rgba(0, 212, 255, 0.4), transparent);
    background-repeat: repeat;
    background-size: 150px 100px;
    animation: particleMove 20s linear infinite;
    pointer-events: none;
  }

  /* Neural network lines */
  .neural-bg {
    position: relative;
    overflow: hidden;
  }

  .neural-bg::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent 49%, rgba(102, 187, 106, 0.1) 50%, transparent 51%),
      linear-gradient(0deg, transparent 49%, rgba(102, 187, 106, 0.1) 50%, transparent 51%);
    background-size: 50px 50px;
    animation: neuralGrid 10s linear infinite;
    pointer-events: none;
  }

  /* Holographic border effect */
  .holographic-border {
    position: relative;
    border: 2px solid transparent;
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent)), #00d4ff, hsl(var(--primary)));
    background-size: 400% 400%;
    animation: holographicBorder 3s ease-in-out infinite;
  }

  .holographic-border::before {
    content: "";
    position: absolute;
    inset: 2px;
    background: hsl(var(--background));
    border-radius: inherit;
  }
}

/* Advanced keyframe animations for artwork-level effects */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
    filter: blur(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
    filter: blur(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(50px) rotateX(10deg);
  }
  to {
    opacity: 1;
    transform: translateY(0) rotateX(0deg);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8) rotateZ(-5deg);
  }
  to {
    opacity: 1;
    transform: scale(1) rotateZ(0deg);
  }
}

@keyframes shimmer {
  0%,
  100% {
    background-position: -200px 0;
    opacity: 0.5;
  }
  50% {
    background-position: calc(200px + 100%) 0;
    opacity: 1;
  }
}

@keyframes float {
  0%,
  100% {
    transform: translateY(0px) rotateZ(0deg);
  }
  33% {
    transform: translateY(-10px) rotateZ(1deg);
  }
  66% {
    transform: translateY(-5px) rotateZ(-0.5deg);
  }
  75% {
    transform: translateY(-15px) rotateZ(1.5deg);
  }
}

@keyframes glow {
  from {
    box-shadow: 0 0 20px rgba(102, 187, 106, 0.3);
  }
  to {
    box-shadow: 0 0 40px rgba(102, 187, 106, 0.6), 0 0 60px rgba(102, 187, 106, 0.3);
  }
}

@keyframes morphingBackground {
  0%,
  100% {
    background: linear-gradient(45deg, hsl(var(--primary)), hsl(var(--accent)));
  }
  25% {
    background: linear-gradient(135deg, hsl(var(--accent)), #00d4ff);
  }
  50% {
    background: linear-gradient(225deg, #00d4ff, hsl(var(--primary)));
  }
  75% {
    background: linear-gradient(315deg, hsl(var(--primary)), hsl(var(--accent)));
  }
}

@keyframes particleFloat {
  0%,
  100% {
    transform: translateY(0px) translateX(0px) scale(1);
  }
  25% {
    transform: translateY(-20px) translateX(10px) scale(1.1);
  }
  50% {
    transform: translateY(-10px) translateX(-5px) scale(0.9);
  }
  75% {
    transform: translateY(-15px) translateX(15px) scale(1.05);
  }
}

@keyframes codeTyping {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes neuralPulse {
  0%,
  100% {
    opacity: 0.3;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
}

@keyframes holographic {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes gradientShift {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

@keyframes glitch {
  0%,
  100% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
}

@keyframes glitch-1 {
  0%,
  100% {
    transform: translate(0);
  }
  10% {
    transform: translate(-2px, -2px);
  }
  20% {
    transform: translate(2px, 2px);
  }
  30% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(2px, -2px);
  }
  50% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  70% {
    transform: translate(-2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
  90% {
    transform: translate(-2px, -2px);
  }
}

@keyframes glitch-2 {
  0%,
  100% {
    transform: translate(0);
  }
  10% {
    transform: translate(2px, 2px);
  }
  20% {
    transform: translate(-2px, -2px);
  }
  30% {
    transform: translate(2px, -2px);
  }
  40% {
    transform: translate(-2px, 2px);
  }
  50% {
    transform: translate(2px, 2px);
  }
  60% {
    transform: translate(-2px, -2px);
  }
  70% {
    transform: translate(2px, -2px);
  }
  80% {
    transform: translate(-2px, 2px);
  }
  90% {
    transform: translate(2px, 2px);
  }
}

@keyframes particleMove {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(-150px, -100px);
  }
}

@keyframes neuralGrid {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(50px, 50px);
  }
}

@keyframes holographicBorder {
  0%,
  100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* Enhanced focus states */
@layer base {
  button:focus-visible,
  input:focus-visible,
  textarea:focus-visible {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
    border-color: hsl(var(--primary));
  }
}
